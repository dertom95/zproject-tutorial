/*  =========================================================================
    zprotut - generated layer of public API

    MIT License

    Copyright (c) [2021] Zproject-Tutorial

    Permission is hereby granted, free of charge, to any person obtaining a copy
    of this software and associated documentation files (the "Software"), to deal
    in the Software without restriction, including without limitation the rights
    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    copies of the Software, and to permit persons to whom the Software is
    furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in all
    copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    SOFTWARE.

################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
    =========================================================================
*/

#ifndef ZPROTUT_LIBRARY_H_INCLUDED
#define ZPROTUT_LIBRARY_H_INCLUDED

//  Set up environment for the application

//  External dependencies
#include <czmq.h>

//  ZPROTUT version macros for compile-time API detection
#define ZPROTUT_VERSION_MAJOR 1
#define ZPROTUT_VERSION_MINOR 1
#define ZPROTUT_VERSION_PATCH 0

#define ZPROTUT_MAKE_VERSION(major, minor, patch) \
    ((major) * 10000 + (minor) * 100 + (patch))
#define ZPROTUT_VERSION \
    ZPROTUT_MAKE_VERSION(ZPROTUT_VERSION_MAJOR, ZPROTUT_VERSION_MINOR, ZPROTUT_VERSION_PATCH)

#if defined (__WINDOWS__)
#   if defined ZPROTUT_STATIC
#       define ZPROTUT_EXPORT
#   elif defined ZPROTUT_INTERNAL_BUILD
#       if defined DLL_EXPORT
#           define ZPROTUT_EXPORT __declspec(dllexport)
#       else
#           define ZPROTUT_EXPORT
#       endif
#   elif defined ZPROTUT_EXPORTS
#       define ZPROTUT_EXPORT __declspec(dllexport)
#   else
#       define ZPROTUT_EXPORT __declspec(dllimport)
#   endif
#   define ZPROTUT_PRIVATE
#elif defined (__CYGWIN__)
#   define ZPROTUT_EXPORT
#   define ZPROTUT_PRIVATE
#else
#   if (defined __GNUC__ && __GNUC__ >= 4) || defined __INTEL_COMPILER
#       define ZPROTUT_PRIVATE __attribute__ ((visibility ("hidden")))
#       define ZPROTUT_EXPORT __attribute__ ((visibility ("default")))
#   else
#       define ZPROTUT_PRIVATE
#       define ZPROTUT_EXPORT
#   endif
#endif

//  Project has no stable classes, so we build the draft API
#undef  ZPROTUT_BUILD_DRAFT_API
#define ZPROTUT_BUILD_DRAFT_API

//  Opaque class structures to allow forward references
//  These classes are stable or legacy and built in all releases
//  Draft classes are by default not built in stable releases
#ifdef ZPROTUT_BUILD_DRAFT_API
typedef struct _shouter_t shouter_t;
#define SHOUTER_T_DEFINED
#endif // ZPROTUT_BUILD_DRAFT_API


//  Public classes, each with its own header file
#ifdef ZPROTUT_BUILD_DRAFT_API
#include "shouter.h"
#endif // ZPROTUT_BUILD_DRAFT_API

#ifdef ZPROTUT_BUILD_DRAFT_API

#ifdef __cplusplus
extern "C" {
#endif

//  Self test for private classes
ZPROTUT_EXPORT void
    zprotut_private_selftest (bool verbose, const char *subtest);

#ifdef __cplusplus
}
#endif
#endif // ZPROTUT_BUILD_DRAFT_API

#endif
/*
################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
*/
